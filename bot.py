import os
import random
import logging
from datetime import datetime
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    ContextTypes,
    CommandHandler,
    MessageHandler,
    filters,
)

# üåê –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")  # https://your-app.onrender.com/webhook
ADMIN_ID = 6184367469
WHITELIST = {6184367469, 6432605813}

# üéÄ –ö–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã
COMPLIMENTS = [
    "–¢—ã –¥–µ–ª–∞–µ—à—å —ç—Ç–æ—Ç –º–∏—Ä —Å–≤–µ—Ç–ª–µ–µ üåü",
    "–¢–≤–æ—è —É–ª—ã–±–∫–∞ —Å–ø–æ—Å–æ–±–Ω–∞ —Ä–∞—Å—Ç–æ–ø–∏—Ç—å –ª—ë–¥ ‚ùÑÔ∏èüòä",
    "–¢—ã –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ —É–º–Ω–∞—è –∏ —Å–∏–ª—å–Ω–∞—è üí™",
    "–¢—ã –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—à—å —Ç–æ–ª—å–∫–æ —Å–∞–º–æ–≥–æ –ª—É—á—à–µ–≥–æ üíñ",
    "–¢—ã –∫—Ä–∞—Å–∏–≤–∞ –Ω–µ —Ç–æ–ª—å–∫–æ –≤–Ω–µ—à–Ω–µ, –Ω–æ –∏ –¥—É—à–æ–π ‚ú®",
    "–° —Ç–æ–±–æ–π –≤—Å–µ–≥–¥–∞ —Ç–µ–ø–ª–æ, –¥–∞–∂–µ –≤ —Å–∞–º—É—é —Ö–æ–ª–æ–¥–Ω—É—é –ø–æ–≥–æ–¥—É ‚òÄÔ∏è",
    "–¢—ã –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—à—å üòç",
    "–¢—ã ‚Äî –∫–∞–∫ –ª—É—á —Å–æ–ª–Ω—Ü–∞ –≤ –ø–∞—Å–º—É—Ä–Ω—ã–π –¥–µ–Ω—å üåà",
    "–¢–≤–æ—è —ç–Ω–µ—Ä–≥–∏—è ‚Äî –∑–∞—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–∞ üî•",
    "–¢—ã –æ—Å–æ–±–µ–Ω–Ω–∞—è. –ù–∏–∫—Ç–æ –Ω–µ –º–æ–∂–µ—Ç —Å—Ä–∞–≤–Ω–∏—Ç—å—Å—è —Å —Ç–æ–±–æ–π üåπ",
    "–Ø —Ç–µ–±—è –æ—á–µ–Ω—å –æ—á–µ–Ω—å –ª—é–±–ª—é –º–∞–ª–µ–Ω—å–∫–∞—è –º–æ—èüíñ",
]

# üéõ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
keyboard = ReplyKeyboardMarkup(
    [["–°–∫–æ–ª—å–∫–æ –ø—Ä–æ—à–ª–æ ‚è≥"], ["–ú–Ω–µ –≥—Ä—É—Å—Ç–Ω–æ üò¢"]],
    resize_keyboard=True
)

# üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞
async def check_access(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    if user.id not in WHITELIST:
        msg = (
            f"‚õîÔ∏è –ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –æ—Ç {user.first_name} (@{user.username}) [ID: {user.id}]\n"
            f"–°–æ–æ–±—â–µ–Ω–∏–µ: {update.message.text}"
        )
        await context.bot.send_message(chat_id=ADMIN_ID, text=msg)
        await update.message.reply_text(
            "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤—ã –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –±–æ—Ç–∞, –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è."
        )
        return False
    return True

# üëã –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not await check_access(update, context): return
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! üëã\n–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—à–ª–æ –≤—Ä–µ–º–µ–Ω–∏, –∏–ª–∏ –µ—Å–ª–∏ —Ç–µ–±–µ –≥—Ä—É—Å—Ç–Ω–æ üíå",
        reply_markup=keyboard
    )

# ‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞ "–°–∫–æ–ª—å–∫–æ –ø—Ä–æ—à–ª–æ"
async def handle_time(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not await check_access(update, context): return
    start_date = datetime(2024, 10, 10, 0, 0, 0)
    now = datetime.now()
    diff = now - start_date
    days = diff.days
    hours, remainder = divmod(diff.seconds, 3600)
    minutes, seconds = divmod(remainder, 60)
    text = f"‚è≥ –° –º–æ–º–µ–Ω—Ç–∞ 10 –æ–∫—Ç—è–±—Ä—è 2024 –ø—Ä–æ—à–ª–æ:\n{days} –¥–Ω–µ–π, {hours} —á, {minutes} –º–∏–Ω, {seconds} —Å–µ–∫."
    await update.message.reply_text(text)

# üò¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ "–ú–Ω–µ –≥—Ä—É—Å—Ç–Ω–æ"
async def handle_sad(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not await check_access(update, context): return
    user = update.effective_user
    compliment = random.choice(COMPLIMENTS)
    await update.message.reply_text(compliment)
    await context.bot.send_message(
        chat_id=ADMIN_ID,
        text=f"üò¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{user.username or user.first_name} (ID: {user.id}) –Ω–∞–∂–∞–ª ¬´–º–Ω–µ –≥—Ä—É—Å—Ç–Ω–æ¬ª."
    )

# üåê –í–µ–±-—Å–µ—Ä–≤–µ—Ä (webhook)
async def main():
    logging.basicConfig(level=logging.INFO)

    app = ApplicationBuilder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & filters.Regex("–°–∫–æ–ª—å–∫–æ –ø—Ä–æ—à–ª–æ"), handle_time))
    app.add_handler(MessageHandler(filters.TEXT & filters.Regex("–ú–Ω–µ –≥—Ä—É—Å—Ç–Ω–æ"), handle_sad))
    app.add_handler(MessageHandler(filters.TEXT & filters.Regex("–º–Ω–µ –≥—Ä—É—Å—Ç–Ω–æ"), handle_sad))

    async def fallback(update: Update, context: ContextTypes.DEFAULT_TYPE):
        await check_access(update, context)

    app.add_handler(MessageHandler(filters.TEXT, fallback))

    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π webhook –∏ —Å—Ç–∞–≤–∏–º –Ω–æ–≤—ã–π
    await app.bot.delete_webhook(drop_pending_updates=True)
    await app.initialize()
    await app.start()
    await app.bot.set_webhook(WEBHOOK_URL)

    await app.updater.start_webhook(
        listen="0.0.0.0",
        port=10000,
        url_path="webhook"
    )

    print("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ webhook.")
    await app.updater.idle()

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
